class Customer < ActiveRecord::Base

    belongs_to :user, primary_key: :stripe_customer_id, foreign_key: :stripe_customer_id
    has_many :feedbacks, foreign_key: :stripe_customer_id, primary_key: :stripe_customer_id
    has_many :stop_requests, foreign_key: :stripe_customer_id, primary_key: :stripe_customer_id
    has_many :stop_queues, foreign_key: :stripe_customer_id, primary_key: :stripe_customer_id
    has_many :failed_invoices, foreign_key: :stripe_customer_id, primary_key: :stripe_customer_id
    has_many :refunds, foreign_key: :stripe_customer_id, primary_key: :stripe_customer_id

    # validates :email, uniqueness: true
    validates :referral_code, uniqueness: true

    def delete_with_stripe
        begin 
            customer = Stripe::Customer.retrieve(stripe_customer_id)    
        rescue => error
            puts '---------------------------------------------------'
            puts "Error occured while retrieving customer from Stripe"
            puts '---------------------------------------------------'
            CustomerMailer.rescued_error(self,error.message).deliver
        else
            begin 
                customer.delete
            rescue => error
                puts '---------------------------------------------------'
                puts "Error occured while deleting customer from Stripe"
                puts '---------------------------------------------------'            
                CustomerMailer.rescued_error(self,error.message).deliver
            ensure
                self.stop_queues.delete_all if self.stop_queues.length > 0
                self.user.destroy unless self.user.nil?
                self.destroy
            end
        end
    end

    def formatted_request_queues
        iterator = 1
        output_array = []
        c.stop_queues.each do |sq|
            if sq.stop_type == "change_sub"
                if sq.updated_meals.to_i  < sq.customer.total_meals_per_week
                    output_array.push("#{iterator}: decrease to #{sq.updated_meals.to_i} meals")
                else
                    output_array.push("#{iterator}: increase to #{sq.updated_meals.to_i} meals")
                end
            elsif sq.stop_type == "cancel"
                output_array.push("#{iterator}: cancel")
            elsif sq.stop_type == "pause"
                output_array.push("#{iterator}: pause until #{sq.end_date}")
            elsif sq.stop_type == "change_hub"
                output_array.push("#{iterator}: change hub to #{sq.cancel_Reason}")
            elsif sq.stop_type == "restart"
                output_array.push("#{iterator}: restart")
            else
                output_array.push("#{iterator}: "+sq.stop_type.capitalize)
            end
            iterator += 1
        end
        output_array.join(", ")
    end

    def create_referral_code
        base = self.name.split(/\s/)[0].downcase
        base_last = self.name.split(/\s/)[1][0..3].downcase unless self.name.split(/\s/)[1].nil?
        numerical = Customer.where("name ilike ?", "%#{base}%").length
        code_candidate = base.to_s + base_last.to_s + (numerical*rand(5..10)).to_s
        while Customer.where(referral_code: code_candidate).length > 0 do
            numerical += 11
            code_candidate = base.to_s + numerical.to_s
        end
        self.update_attribute(:referral_code, code_candidate)
    end


    def self.meal_count(count_type)
        current_pick_up_date = SystemSetting.where(setting:"system_date", setting_attribute:"pick_up_date").take.setting_value.to_date
        active_nonpaused_customers = Customer.where(active?: ["Yes","yes"], paused?: [nil,"No","no"], next_pick_up_date:current_pick_up_date)
        
        monday_regular = active_nonpaused_customers.sum(:regular_meals_on_monday).to_i
            monday_regular_wandas = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%wanda%").sum(:regular_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%wanda%").sum(:regular_meals_on_monday).to_i
            monday_regular_coffee_bar = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%coffee%bar%").sum(:regular_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%coffee%bar%").sum(:regular_meals_on_monday).to_i
            monday_regular_dekefir = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%dekefir%").sum(:regular_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%dekefir%").sum(:regular_meals_on_monday).to_i
        monday_green = active_nonpaused_customers.sum(:green_meals_on_monday).to_i
            monday_green_wandas = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%wanda%").sum(:green_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%wanda%").sum(:green_meals_on_monday).to_i
            monday_green_coffee_bar = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%coffee%bar%").sum(:green_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%coffee%bar%").sum(:green_meals_on_monday).to_i
            monday_green_dekefir = active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null", "%dekefir%").sum(:green_meals_on_monday).to_i + active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null", "%dekefir%").sum(:green_meals_on_monday).to_i
        thursday_regular = active_nonpaused_customers.sum(:regular_meals_on_thursday).to_i
            thursday_regular_wandas = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%wanda%").sum(:regular_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%wanda%").sum(:regular_meals_on_thursday).to_i
            thursday_regular_coffee_bar = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%coffee%bar%").sum(:regular_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%coffee%bar%").sum(:regular_meals_on_thursday).to_i
            thursday_regular_dekefir = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%dekefir%").sum(:regular_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%dekefir%").sum(:regular_meals_on_thursday).to_i
        thursday_green = active_nonpaused_customers.sum(:green_meals_on_thursday).to_i
            thursday_green_wandas = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%wanda%").sum(:green_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%wanda%").sum(:green_meals_on_thursday).to_i
            thursday_green_coffee_bar = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%coffee%bar%").sum(:green_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%coffee%bar%").sum(:green_meals_on_thursday).to_i
            thursday_green_dekefir = active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null", "%dekefir%").sum(:green_meals_on_thursday).to_i + active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null", "%dekefir%").sum(:green_meals_on_thursday).to_i

        total_meals = monday_regular + monday_green + thursday_regular + thursday_green

        # Pauses taking place next week
        pause_next_week = StopQueue.where(stop_type:"pause").map {|q| q.customer.total_meals_per_week.to_i }.inject {|sum, x| sum + x}.to_i
        cancel_next_week = StopQueue.where(stop_type:"cancel").map {|q| q.customer.total_meals_per_week.to_i }.inject {|sum, x| sum + x}.to_i
        unpause_next_week = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).sum(:total_meals_per_week).to_i
        restarts_next_week = StopQueue.where(stop_type:"restart").map {|q| q.customer.total_meals_per_week.to_i }.inject {|sum, x| sum + x}.to_i
        meal_count_change = (StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.sum(:updated_meals).to_i - StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.map {|r| r.customer.total_meals_per_week.to_i}.inject {|sum, x| sum + x}.to_i).to_i
        new_sign_ups = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).sum(:total_meals_per_week).to_i

        total_meals_next = total_meals - pause_next_week - cancel_next_week + unpause_next_week + restarts_next_week + meal_count_change + new_sign_ups 

        if count_type == "monday_regular"
            monday_regular
        elsif count_type == "monday_regular_wandas"
            monday_regular_wandas
        elsif count_type == "monday_regular_coffee_bar"
            monday_regular_coffee_bar
        elsif count_type == "monday_regular_dekefir"
            monday_regular_dekefir
        elsif count_type == "monday_green"
            monday_green
        elsif count_type == "monday_green_wandas"
            monday_green_wandas
        elsif count_type == "monday_green_coffee_bar"
            monday_green_coffee_bar
        elsif count_type == "monday_green_dekefir"
            monday_green_dekefir
        elsif count_type == "thursday_regular"
            thursday_regular
        elsif count_type == "thursday_regular_wandas"
            thursday_regular_wandas
        elsif count_type == "thursday_regular_coffee_bar"
            thursday_regular_coffee_bar
        elsif count_type == "thursday_regular_dekefir"
            thursday_regular_dekefir
        elsif count_type == "thursday_green"
            thursday_green
        elsif count_type == "thursday_green_wandas"
            thursday_green_wandas
        elsif count_type == "thursday_green_coffee_bar"
            thursday_green_coffee_bar
        elsif count_type == "thursday_green_dekefir"
            thursday_green_dekefir
        elsif count_type == "total_meals"
            total_meals
        elsif count_type == "total_meals_next"
            total_meals_next
        elsif count_type == "neg_adjustment_pork_monday_wandas"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_pork_monday_coffee_bar"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_pork_monday_dekefir"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_pork_monday"
            neg_adjustment_pork_monday_wandas = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_pork_monday_coffee_bar = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_pork_monday_dekefir = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_pork_monday_wandas + neg_adjustment_pork_monday_coffee_bar + neg_adjustment_pork_monday_dekefir
        elsif count_type == "neg_adjustment_pork_thursday_wandas"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_pork_thursday_coffee_bar"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_pork_thursday_dekefir"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_pork_thursday"
            neg_adjustment_pork_thursday_wandas = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_pork_thursday_coffee_bar = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_pork_thursday_dekefir = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_pork is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_pork is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_pork_thursday_wandas + neg_adjustment_pork_thursday_coffee_bar + neg_adjustment_pork_thursday_dekefir
        elsif count_type == "neg_adjustment_beef_monday_wandas"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_beef_monday_coffee_bar"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_beef_monday_dekefir"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_beef_monday"
            neg_adjustment_beef_monday_wandas = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_beef_monday_coffee_bar = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_beef_monday_dekefir = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_beef_monday_wandas + neg_adjustment_beef_monday_coffee_bar + neg_adjustment_beef_monday_dekefir
        elsif count_type == "neg_adjustment_beef_thursday_wandas"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_beef_thursday_coffee_bar"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_beef_thursday_dekefir"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_beef_thursday"
            neg_adjustment_beef_thursday_wandas = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_beef_thursday_coffee_bar = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_beef_thursday_dekefir = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_beef is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_beef is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_beef_thursday_wandas + neg_adjustment_beef_thursday_coffee_bar + neg_adjustment_beef_thursday_dekefir
        elsif count_type == "neg_adjustment_poultry_monday_wandas"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_monday_coffee_bar"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_monday_dekefir"
            (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_monday"
            neg_adjustment_poultry_monday_wandas = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%wanda%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_poultry_monday_coffee_bar = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_poultry_monday_dekefir = (active_nonpaused_customers.where("monday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3) + (active_nonpaused_customers.where("monday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_monday).to_i/3)
            neg_adjustment_poultry_monday_wandas + neg_adjustment_poultry_monday_coffee_bar + neg_adjustment_poultry_monday_dekefir
        elsif count_type == "neg_adjustment_poultry_thursday_wandas"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_thursday_coffee_bar"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_thursday_dekefir"
            (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
        elsif count_type == "neg_adjustment_poultry_thursday"        
            neg_adjustment_poultry_thursday_wandas = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%wanda%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_poultry_thursday_coffee_bar = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "coffee%bar").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_poultry_thursday_dekefir = (active_nonpaused_customers.where("thursday_pickup_hub ilike ? and recurring_delivery is null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3) + (active_nonpaused_customers.where("thursday_delivery_hub ilike ? and recurring_delivery is not null and no_poultry is true", "%dekefir%").sum(:regular_meals_on_thursday).to_i/3)
            neg_adjustment_poultry_thursday_wandas + neg_adjustment_poultry_thursday_coffee_bar + neg_adjustment_poultry_thursday_dekefir
        elsif count_type == "neg_adjustment_poultry_next_monday"        
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}
            
            preference_negs_master_subset.where(no_poultry:true).sum(:regular_meals_on_monday).to_i/3
        elsif count_type == "neg_adjustment_beef_next_monday"
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}

            preference_negs_master_subset.where(no_beef:true).sum(:regular_meals_on_monday).to_i/3
        elsif count_type == "neg_adjustment_pork_next_monday"
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}

            preference_negs_master_subset.where(no_pork:true).sum(:regular_meals_on_monday).to_i/3
        elsif count_type == "neg_adjustment_poultry_next_thursday"        
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}

            preference_negs_master_subset.where(no_poultry:true).sum(:regular_meals_on_thursday).to_i/3
        elsif count_type == "neg_adjustment_beef_next_thursday"
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}

            preference_negs_master_subset.where(no_beef:true).sum(:regular_meals_on_thursday).to_i/3
        elsif count_type == "neg_adjustment_pork_next_thursday"
            current_customers = active_nonpaused_customers.map {|c| c.stripe_customer_id} #in
            pausing_customers = StopQueue.where(stop_type:"pause").map {|q| q.stripe_customer_id} #not in
            canceling_customers = StopQueue.where(stop_type:"cancel").map {|q| q.stripe_customer_id} #not in
            unpausing_customers = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).map {|c| c.stripe_customer_id} #in
            restarting_customers = StopQueue.where(stop_type:"restart").map {|q| q.stripe_customer_id} #in
            new_customers = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).map {|c| c.stripe_customer_id} #in
            preference_negs_master_subset = Customer.where{((stripe_customer_id >> current_customers) && (stripe_customer_id << pausing_customers) && (stripe_customer_id << canceling_customers)) || (stripe_customer_id >> unpausing_customers) || (stripe_customer_id >> restarting_customers) || (stripe_customer_id >> new_customers)}

            preference_negs_master_subset.where(no_pork:true).sum(:regular_meals_on_thursday).to_i/3
        elsif count_type == "regular_meals_next_monday"
            pause_next_monday_regular = StopQueue.where(stop_type:"pause").map {|q| q.customer.regular_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_regular = StopQueue.where(stop_type:"cancel").map {|q| q.customer.regular_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_regular = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).sum(:regular_meals_on_monday).to_i
            restarts_next_monday_regular = StopQueue.where(stop_type:"restart").map {|q| q.customer.regular_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_regular = StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_mon.to_i - e.customer.regular_meals_on_monday.to_i}
            new_sign_ups_next_monday_regular = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).sum(:regular_meals_on_monday).to_i
            
            regular_meals_next_monday = monday_regular - pause_next_monday_regular - cancel_next_monday_regular + unpause_next_monday_regular + restarts_next_monday_regular + meal_count_change_next_monday_regular + new_sign_ups_next_monday_regular

        elsif count_type == "regular_meals_next_thursday"
            pause_next_thursday_regular = StopQueue.where(stop_type:"pause").map {|q| q.customer.regular_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_regular = StopQueue.where(stop_type:"cancel").map {|q| q.customer.regular_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            unpause_next_thursday_regular = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).sum(:regular_meals_on_thursday).to_i
            restarts_next_thursday_regular = StopQueue.where(stop_type:"restart").map {|q| q.customer.regular_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_regular = StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_thu.to_i - e.customer.regular_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_regular = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).sum(:regular_meals_on_thursday).to_i

            regular_meals_next_thursday = thursday_regular - pause_next_thursday_regular - cancel_next_thursday_regular + unpause_next_thursday_regular + restarts_next_thursday_regular + meal_count_change_next_thursday_regular + new_sign_ups_next_thursday_regular
            regular_meals_next_thursday

        elsif count_type == "green_meals_next_monday"
            pause_next_monday_green = StopQueue.where(stop_type:"pause").map {|q| q.customer.green_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_green = StopQueue.where(stop_type:"cancel").map {|q| q.customer.green_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_green = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).sum(:green_meals_on_monday).to_i
            restarts_next_monday_green = StopQueue.where(stop_type:"restart").map {|q| q.customer.green_meals_on_monday.to_i }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_green = StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_grn_mon.to_i - e.customer.green_meals_on_monday.to_i}
            new_sign_ups_next_monday_green = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).sum(:green_meals_on_monday).to_i
            
            green_meals_next_monday = monday_green - pause_next_monday_green - cancel_next_monday_green + unpause_next_monday_green + restarts_next_monday_green + meal_count_change_next_monday_green + new_sign_ups_next_monday_green

        elsif count_type == "green_meals_next_thursday"
            pause_next_thursday_green = StopQueue.where(stop_type:"pause").map {|q| q.customer.green_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_green = StopQueue.where(stop_type:"cancel").map {|q| q.customer.green_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            unpause_next_thursday_green = Customer.where(paused?: ["Yes","yes"], pause_end_date: [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]).sum(:green_meals_on_thursday).to_i
            restarts_next_thursday_green = StopQueue.where(stop_type:"restart").map {|q| q.customer.green_meals_on_thursday.to_i }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_green = StopQueue.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_grn_thu.to_i - e.customer.green_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_green = Customer.where(active?:["Yes","yes"], next_pick_up_date: Chowdy::Application.closest_date(1,1,current_pick_up_date)).sum(:green_meals_on_thursday).to_i

            green_meals_next_thursday = thursday_green - pause_next_thursday_green - cancel_next_thursday_green + unpause_next_thursday_green + restarts_next_thursday_green + meal_count_change_next_thursday_green + new_sign_ups_next_thursday_green
        elsif count_type == "wandas_meals_next_monday"
            pause_next_monday_wandas = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.monday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_wandas = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.monday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_wandas = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((monday_pickup_hub =~ '%wanda%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%wanda%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_monday).to_i
            restarts_next_monday_wandas = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.monday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_wandas = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i - e.customer.regular_meals_on_monday.to_i - e.customer.green_meals_on_monday.to_i}
            new_sign_ups_next_monday_wandas = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((monday_pickup_hub =~ '%wanda%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%wanda%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i}
            hub_change_next_monday_wandas = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%wanda%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%wanda%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i}
        
            wandas_meals_next_monday = monday_regular_wandas + monday_green_wandas - pause_next_monday_wandas - cancel_next_monday_wandas + unpause_next_monday_wandas + restarts_next_monday_wandas + meal_count_change_next_monday_wandas + new_sign_ups_next_monday_wandas + hub_change_next_monday_wandas

        elsif count_type == "wandas_meals_next_thursday"
            pause_next_thursday_wandas = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.thursday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_wandas = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.thursday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_thursday_wandas = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((thursday_pickup_hub =~ '%wanda%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%wanda%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_thursday).to_i
            restarts_next_thursday_wandas = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.thursday_pickup_hub.match(/wanda/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/wanda/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_wandas = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i - e.customer.regular_meals_on_thursday.to_i - e.customer.green_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_wandas = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((thursday_pickup_hub =~ '%wanda%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%wanda%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i}
            hub_change_next_thursday_wandas = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%wanda%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%wanda%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%wanda%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%wanda%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i}

            wandas_meals_next_thursday = thursday_regular_wandas + thursday_green_wandas - pause_next_thursday_wandas - cancel_next_thursday_wandas + unpause_next_thursday_wandas + restarts_next_thursday_wandas + meal_count_change_next_thursday_wandas + new_sign_ups_next_thursday_wandas + hub_change_next_thursday_wandas
        elsif count_type == "coffee_bar_meals_next_monday"
            pause_next_monday_coffee_bar = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.monday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_coffee_bar = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.monday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_coffee_bar = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((monday_pickup_hub =~ '%coffee%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%coffee%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_monday).to_i
            restarts_next_monday_coffee_bar = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.monday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_coffee_bar = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i - e.customer.regular_meals_on_monday.to_i - e.customer.green_meals_on_monday.to_i}
            new_sign_ups_next_monday_coffee_bar = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((monday_pickup_hub =~ '%coffee%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%coffee%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i}
            hub_change_next_monday_coffee_bar = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%coffee%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%coffee%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i}

            coffee_bar_meals_next_monday = monday_regular_coffee_bar + monday_green_coffee_bar - pause_next_monday_coffee_bar - cancel_next_monday_coffee_bar + unpause_next_monday_coffee_bar + restarts_next_monday_coffee_bar + meal_count_change_next_monday_coffee_bar + new_sign_ups_next_monday_coffee_bar + hub_change_next_monday_coffee_bar

        elsif count_type == "coffee_bar_meals_next_thursday"
            pause_next_thursday_coffee_bar = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.thursday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_coffee_bar = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.thursday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_thursday_coffee_bar = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((thursday_pickup_hub =~ '%coffee%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%coffee%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_thursday).to_i
            restarts_next_thursday_coffee_bar = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.thursday_pickup_hub.match(/coffee/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/coffee/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_coffee_bar = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i - e.customer.regular_meals_on_thursday.to_i - e.customer.green_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_coffee_bar = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((thursday_pickup_hub =~ '%coffee%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%coffee%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i}
            hub_change_next_thursday_coffee_bar = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%coffee%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%coffee%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%coffee%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%coffee%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i}

            coffee_bar_meals_next_thursday = thursday_regular_coffee_bar + thursday_green_coffee_bar - pause_next_thursday_coffee_bar - cancel_next_thursday_coffee_bar + unpause_next_thursday_coffee_bar + restarts_next_thursday_coffee_bar + meal_count_change_next_thursday_coffee_bar + new_sign_ups_next_thursday_coffee_bar + hub_change_next_thursday_coffee_bar

        elsif count_type == "dekefir_meals_next_monday"
            pause_next_monday_dekefir = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.monday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_dekefir = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.monday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_dekefir = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((monday_pickup_hub =~ '%dekefir%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%dekefir%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_monday).to_i
            restarts_next_monday_dekefir = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.monday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.monday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_dekefir = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i - e.customer.regular_meals_on_monday.to_i - e.customer.green_meals_on_monday.to_i}
            new_sign_ups_next_monday_dekefir = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((monday_pickup_hub =~ '%dekefir%') & (recurring_delivery >> ["No","no",nil])) | ((monday_delivery_hub =~ '%dekefir%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i}
            hub_change_next_monday_dekefir = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%dekefir%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%dekefir%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.monday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.monday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i}
        
            dekefir_meals_next_monday = monday_regular_dekefir + monday_green_dekefir - pause_next_monday_dekefir - cancel_next_monday_dekefir + unpause_next_monday_dekefir + restarts_next_monday_dekefir + meal_count_change_next_monday_dekefir + new_sign_ups_next_monday_dekefir + hub_change_next_monday_dekefir



        elsif count_type == "dekefir_meals_next_thursday"
            pause_next_thursday_dekefir = StopQueue.where(stop_type:"pause").map {|q| if (q.customer.thursday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_dekefir = StopQueue.where(stop_type:"cancel").map {|q| if (q.customer.thursday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_thursday_dekefir = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((thursday_pickup_hub =~ '%dekefir%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%dekefir%') & (recurring_delivery >> ["Yes","yes"])))}.sum(:regular_meals_on_thursday).to_i
            restarts_next_thursday_dekefir = StopQueue.where(stop_type:"restart").map {|q| if (q.customer.thursday_pickup_hub.match(/dekefir/i) && ([nil,"No","no"].include? q.customer.recurring_delivery)) || (q.customer.thursday_delivery_hub.match(/dekefir/i) && (["Yes","yes"].include? q.customer.recurring_delivery)); q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_dekefir = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i - e.customer.regular_meals_on_thursday.to_i - e.customer.green_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_dekefir = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((thursday_pickup_hub =~ '%dekefir%') & (recurring_delivery >> ["No","no",nil])) | ((thursday_delivery_hub =~ '%dekefir%') & (recurring_delivery >> ["Yes","yes"])))}.to_a.sum {|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i}
            hub_change_next_thursday_dekefir = StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%dekefir%") & (stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} + StopQueue.where{(stop_type =~ "change_hub") & (stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (cancel_reason =~ "%dekefir%") & (stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id})}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.thursday_pickup_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["No","no",nil])) | ((customers.thursday_delivery_hub =~ '%dekefir%') & (customers.recurring_delivery >> ["Yes","yes"])))}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i}
   
            dekefir_meals_next_thursday = thursday_regular_dekefir + thursday_green_dekefir - pause_next_thursday_dekefir - cancel_next_thursday_dekefir + unpause_next_thursday_dekefir + restarts_next_thursday_dekefir + meal_count_change_next_thursday_dekefir + new_sign_ups_next_thursday_dekefir + hub_change_next_thursday_dekefir

        elsif count_type == "hub_unassigned_meals_next_monday"
            monday_hub_unassigned = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == current_pick_up_date) & (((recurring_delivery >> [nil,"No","no"]) & ((monday_pickup_hub == nil) | ((monday_pickup_hub !~ '%wanda%') & (monday_pickup_hub !~ '%coffee%') & (monday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & (((monday_delivery_hub == nil))|((monday_delivery_hub !~ '%wanda%') & (monday_delivery_hub !~ '%coffee%') & (monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum {|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i }
            pause_next_monday_hub_unassigned = StopQueue.where(stop_type:"pause").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery) && ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_monday_hub_unassigned = StopQueue.where(stop_type:"cancel").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery) && ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            unpause_next_monday_hub_unassigned = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((recurring_delivery >> [nil,"No","no"]) & ((monday_pickup_hub == nil) | ((monday_pickup_hub !~ '%wanda%') & (monday_pickup_hub !~ '%coffee%') & (monday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & (((monday_delivery_hub == nil))|((monday_delivery_hub !~ '%wanda%') & (monday_delivery_hub !~ '%coffee%') & (monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i}
            restarts_next_monday_hub_unassigned = StopQueue.where(stop_type:"restart").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery)&& ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_monday.to_i + q.customer.green_meals_on_monday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_monday_hub_unassigned = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.monday_pickup_hub == nil)| ((customers.monday_pickup_hub !~ '%wanda%') & (customers.monday_pickup_hub !~ '%coffee%') & (customers.monday_pickup_hub !~ '%dekefir%')))) | ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.monday_delivery_hub == nil))|((customers.monday_delivery_hub !~ '%wanda%') & (customers.monday_delivery_hub !~ '%coffee%') & (customers.monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i - e.customer.regular_meals_on_monday.to_i - e.customer.green_meals_on_monday.to_i}
            new_sign_ups_next_monday_hub_unassigned = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((recurring_delivery >> [nil,"No","no"]) & ((monday_pickup_hub == nil) | ((monday_pickup_hub !~ '%wanda%') & (monday_pickup_hub !~ '%coffee%') & (monday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & (((monday_delivery_hub == nil))|((monday_delivery_hub !~ '%wanda%') & (monday_delivery_hub !~ '%coffee%') & (monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum {|e| e.regular_meals_on_monday.to_i + e.green_meals_on_monday.to_i}
            hub_change_next_monday_hub_unassigned = - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.monday_pickup_hub == nil)|((customers.monday_pickup_hub !~ '%wanda%') & (customers.monday_pickup_hub !~ '%coffee%') & (customers.monday_pickup_hub !~ '%dekefir%'))))| ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.monday_delivery_hub == nil))|((customers.monday_delivery_hub !~ '%wanda%') & (customers.monday_delivery_hub !~ '%coffee%') & (customers.monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.updated_reg_mon.to_i + e.updated_grn_mon.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.monday_pickup_hub == nil)|((customers.monday_pickup_hub !~ '%wanda%') & (customers.monday_pickup_hub !~ '%coffee%') & (customers.monday_pickup_hub !~ '%dekefir%'))))| ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.monday_delivery_hub == nil))|((customers.monday_delivery_hub !~ '%wanda%') & (customers.monday_delivery_hub !~ '%coffee%') & (customers.monday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.customer.regular_meals_on_monday.to_i + e.customer.green_meals_on_monday.to_i} 

            hub_unassigned_meals_next_monday = monday_hub_unassigned - pause_next_monday_hub_unassigned - cancel_next_monday_hub_unassigned + unpause_next_monday_hub_unassigned + restarts_next_monday_hub_unassigned + meal_count_change_next_monday_hub_unassigned + new_sign_ups_next_monday_hub_unassigned + hub_change_next_monday_hub_unassigned

        elsif count_type == "hub_unassigned_meals_next_thursday"
            thursday_hub_unassigned = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == current_pick_up_date) & (((recurring_delivery >> [nil,"No","no"]) & ((thursday_pickup_hub == nil) | ((thursday_pickup_hub !~ '%wanda%') & (thursday_pickup_hub !~ '%coffee%') & (thursday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & (((thursday_delivery_hub == nil))|((thursday_delivery_hub !~ '%wanda%') & (thursday_delivery_hub !~ '%coffee%') & (thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum {|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i }
            pause_next_thursday_hub_unassigned = StopQueue.where(stop_type:"pause").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery) && ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            cancel_next_thursday_hub_unassigned = StopQueue.where(stop_type:"cancel").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery) && ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i           
            unpause_next_thursday_hub_unassigned = Customer.where{(paused? >> ["Yes","yes"]) & (pause_end_date >> [Chowdy::Application.closest_date(1,0,current_pick_up_date),Chowdy::Application.closest_date(1,1,current_pick_up_date)]) & (((recurring_delivery >> [nil,"No","no"]) & ((thursday_pickup_hub == nil)|((thursday_pickup_hub !~ '%wanda%') & (thursday_pickup_hub !~ '%coffee%') & (thursday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & ((thursday_delivery_hub == nil)|((thursday_delivery_hub !~ '%wanda%') & (thursday_delivery_hub !~ '%coffee%') & (thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i}    
            restarts_next_thursday_hub_unassigned = StopQueue.where(stop_type:"restart").map {|q| if (([nil,"No","no"].include? q.customer.recurring_delivery) && ((q.customer.monday_pickup_hub.match(/wanda/i).nil?) && (q.customer.monday_pickup_hub.match(/coffee/i).nil?) && (q.customer.monday_pickup_hub.match(/dekefir/i).nil?))) || ((["Yes","yes"].include? q.customer.recurring_delivery) && ((q.customer.monday_delivery_hub.match(/wanda/i).nil?) && (q.customer.monday_delivery_hub.match(/coffee/i).nil?) && (q.customer.monday_delivery_hub.match(/dekefir/i).nil?))) ; q.customer.regular_meals_on_thursday.to_i + q.customer.green_meals_on_thursday.to_i else 0 end }.inject {|sum, x| sum + x}.to_i
            meal_count_change_next_thursday_hub_unassigned = StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_sub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.thursday_pickup_hub == nil)| ((customers.thursday_pickup_hub !~ '%wanda%') & (customers.thursday_pickup_hub !~ '%coffee%') & (customers.thursday_pickup_hub !~ '%dekefir%')))) | ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.thursday_delivery_hub == nil))|((customers.thursday_delivery_hub !~ '%wanda%') & (customers.thursday_delivery_hub !~ '%coffee%') & (customers.thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i - e.customer.regular_meals_on_thursday.to_i - e.customer.green_meals_on_thursday.to_i}
            new_sign_ups_next_thursday_hub_unassigned = Customer.where{(active? >> ["Yes","yes"]) & (next_pick_up_date == Chowdy::Application.closest_date(1,1,current_pick_up_date)) & (((recurring_delivery >> [nil,"No","no"]) & ((thursday_pickup_hub == nil) | ((thursday_pickup_hub !~ '%wanda%') & (thursday_pickup_hub !~ '%coffee%') & (thursday_pickup_hub !~ '%dekefir%')))) | ((recurring_delivery >> ["Yes","yes"]) & (((thursday_delivery_hub == nil))|((thursday_delivery_hub !~ '%wanda%') & (thursday_delivery_hub !~ '%coffee%') & (thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum {|e| e.regular_meals_on_thursday.to_i + e.green_meals_on_thursday.to_i}
            hub_change_next_thursday_hub_unassigned =  - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id >> StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.thursday_pickup_hub == nil)|((customers.thursday_pickup_hub !~ '%wanda%') & (customers.thursday_pickup_hub !~ '%coffee%') & (customers.thursday_pickup_hub !~ '%dekefir%'))))| ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.thursday_delivery_hub == nil))|((customers.thursday_delivery_hub !~ '%wanda%') & (customers.thursday_delivery_hub !~ '%coffee%') & (customers.thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.updated_reg_thu.to_i + e.updated_grn_thu.to_i} - StopQueue.joins{customer}.where{(stop_queues.stop_type =~ "change_hub") & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["pause","cancel"]).map {|s| s.stripe_customer_id}) & (stop_queues.stripe_customer_id << StopQueue.where(stop_type:["change_sub"]).map {|s| s.stripe_customer_id}) & (((customers.recurring_delivery >> [nil,"No","no"]) & ((customers.thursday_pickup_hub == nil)|((customers.thursday_pickup_hub !~ '%wanda%') & (customers.thursday_pickup_hub !~ '%coffee%') & (customers.thursday_pickup_hub !~ '%dekefir%'))))| ((customers.recurring_delivery >> ["Yes","yes"]) & (((customers.thursday_delivery_hub == nil))|((customers.thursday_delivery_hub !~ '%wanda%') & (customers.thursday_delivery_hub !~ '%coffee%') & (customers.thursday_delivery_hub !~ '%dekefir%')))))}.to_a.sum{|e| e.customer.regular_meals_on_thursday.to_i + e.customer.green_meals_on_thursday.to_i} 

            hub_unassigned_meals_next_thursday = thursday_hub_unassigned - pause_next_thursday_hub_unassigned - cancel_next_thursday_hub_unassigned + unpause_next_thursday_hub_unassigned + restarts_next_thursday_hub_unassigned + meal_count_change_next_thursday_hub_unassigned + new_sign_ups_next_thursday_hub_unassigned + hub_change_next_thursday_hub_unassigned

        end
    end

end
